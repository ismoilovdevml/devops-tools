global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	tcp
#	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend rke2-api
    bind *:6443
    mode tcp
    option tcplog
    default_backend rke2-masters

backend rke2-masters
    mode tcp
    balance roundrobin
    option tcp-check
    default-server inter 10s fall 2 rise 3
    server master1 10.128.0.22:6443 check
    server master2 10.128.0.23:6443 check
    server master3 10.162.0.2:6443 check

# NGINX Ingress HTTP frontend
frontend http-ingress
    bind *:80
    mode tcp
    option tcplog
    default_backend nginx-http

# NGINX Ingress HTTPS frontend
frontend https-ingress
    bind *:443
    mode tcp
    option tcplog
    default_backend nginx-https

# Backend for NGINX Ingress HTTP
backend nginx-http
    mode tcp
    balance roundrobin
    server nginx1 10.188.0.200:80 check

# Backend for NGINX Ingress HTTPS
backend nginx-https
    mode tcp
    balance roundrobin
    server nginx1 10.188.0.200:443 check


    helm uninstall rke2-canal -n kube-system
    kubectl delete pod helm-install-rke2-ingress-nginx-kg8zq -n kube-system

